[project]
name = "real-time-voice-cloning"
version = "0.0.0"
requires-python = ">=3.7"

# Dependencies will be populated by `uv add -r requirements.txt`.
dependencies = [
  "inflect==5.3.0",
  "librosa==0.8.1",
  "matplotlib==3.5.1",
  "numpy==1.20.3",
  "Pillow==8.4.0",
  "PyQt5==5.15.6",
  "scikit-learn==1.0.2",
  "scipy==1.7.3",
  "sounddevice==0.4.3",
  "soundfile==0.10.3.post1",
  "tqdm==4.62.3",
  "umap-learn==0.5.2",
  "Unidecode==1.3.2",
  "urllib3==1.26.7",
  "visdom==0.1.8.9",
  "webrtcvad==2.0.10",
]

[project.optional-dependencies]
# CPU-only torch (default in CI)
cpu = ["torch==1.10.*"]
# Uncomment if you want to support specific CUDA variants locally
# cu113 = ["torch==1.10.2+cu113"]

[dependency-groups]
# Dev/test dependencies
dev = ["pytest"]

# Map extras -> PyTorch wheel indexes so uv knows where to fetch torch
[tool.uv.sources]
torch = [
  { index = "pytorch-cpu",   extra = "cpu"   },
  # { index = "pytorch-cu113", extra = "cu113" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

# Constrain lock resolution to platforms we actually support to avoid
# selecting wheels that don't exist on Windows during local sync.
[tool.uv]
# Use PEP 508 markers for environments we support; allows a lock usable on Windows and Linux.
required-environments = [
  "sys_platform == 'win32'",
  "sys_platform == 'linux' and platform_machine == 'x86_64'",
]

# [[tool.uv.index]]
# name = "pytorch-cu113"
# url = "https://download.pytorch.org/whl/cu113"
# explicit = true
